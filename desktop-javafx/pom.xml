<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>java-graalvm-start</artifactId>
        <groupId>com.mueeee</groupId>
        <version>1.0</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <artifactId>desktop-javafx</artifactId>
    <version>1.0</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>21</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <!-- https://search.maven.org/artifact/org.openjfx/javafx -->
        <!-- 21-ea+5, 24-ea+5 -->
        <javafx.version>24-ea+5</javafx.version>
        <!-- https://docs.gluonhq.com/#_what_is_new -->
        <!-- 21-ea+5, 24-ea+7.1 -->
        <javafx.staticSdk.version>24-ea+7.1</javafx.staticSdk.version>
        <!--
            插件更新日志：https://docs.gluonhq.com/#_what_is_new
                - 大于1.0.11，构建失败，找不到rc.exe，需要配置环境变量：C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64

            C:\Users\用户名\.gluon\substrate
            https://download2.gluonhq.com/substrate/javafxstaticsdk/openjfx-19-ea+8-windows-x86_64-static.zip
         -->
        <gluonfx-maven-plugin.version>1.0.27</gluonfx-maven-plugin.version>
        <start-class>com.mueeee.desktopjavafx.App</start-class>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <release>${java.version}</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <mainClass>${start-class}</mainClass>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.gluonhq</groupId>
                <artifactId>gluonfx-maven-plugin</artifactId>
                <version>${gluonfx-maven-plugin.version}</version>
                <configuration>
                    <mainClass>${start-class}</mainClass>
                    <!--
                    <javaStaticSdkVersion>11-ea+10</javaStaticSdkVersion>
                    -->
                    <javafxStaticSdkVersion>${javafx.staticSdk.version}</javafxStaticSdkVersion>
                    <!-- JavaFx 中使用 ResourceBundle.getBundle("xxxxxx") 的路径，如果没有则不需要配置 -->
                    <!--<bundlesList>
                        <list>com.mueeee.desktopjavafx</list>
                    </bundlesList>-->
                    <!-- 允许的资源文件后缀 -->
                    <resourcesList>
                        <list>.*\\.properties$</list>
                    </resourcesList>
                    <!-- 涉及反射的类 -->
                    <reflectionList>
                        <list>com.mueeee.desktopjavafx.ctrl.MainCtrl</list>
                    </reflectionList>
                    <nativeImageArgs>
                        <!-- “快速构建”模式，以减少在开发过程中生成本机可执行文件所需的时间。请注意，此模式可能会对峰值性能和生成的可执行文件的大小产生负面影响，因此建议仅用于开发目的。 -->
                        <!--<arg>-Ob</arg>-->

                        <!-- 现在默认启用并已弃用，因为不再需要它。 -->
                        <!--<arg>&#45;&#45;allow-incomplete-classpath</arg>-->

                        <!--
                        2023-05-04，GraalVM-22.3.0
                        修复在Linux上编译报错：Fatal error: java.lang.IllegalAccessError: class com.gluonhq.substrate.feature.GluonFeature (in unnamed module @0x6c1832aa) cannot access class com.oracle.svm.core.jdk.NativeLibrarySupport (in module org.graalvm.nativeimage.builder) because module org.graalvm.nativeimage.builder does not export com.oracle.svm.core.jdk to unnamed module @0x6c1832aa
                        https://github.com/oracle/graal/issues/5265
                        -->
                        <arg>--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.jdk=ALL-UNNAMED</arg>

                        <!--
                        Native-image building on Windows currently only supports target architecture: AMD64 (?? unsupported))
                        GluonFx + GraalVM 21，21之前的版本没有此问题，非GluonFx插件项目的没有此问题
                        1 目前有一些解决方案，VS语言包删除中文，添加英文
                        2 系统设置 - 时间和语言 - 语言和区域 - 管理语言设置 - 更改系统区域设置 - 勾选：Beta版本：使用 Unicode UTF-8 提供全球语言支持
                        3 添加参数 -H:-CheckToolchain，跳过环境检查
                         -->
                        <arg>-H:-CheckToolchain</arg>
                    </nativeImageArgs>
                    <releaseConfiguration>
                        <!-- all targets -->
                        <!--<packageType></packageType>-->
                        <description>desktop-javafx</description>
                        <vendor>muetech</vendor>
                        <version>${version}</version>
                        <!-- macOS -->
                        <macAppStore>false</macAppStore>
                        <macSigningUserName>muetech</macSigningUserName>
                        <!--<macAppCategory>public.app-category.utilities</macAppCategory>-->
                    </releaseConfiguration>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>